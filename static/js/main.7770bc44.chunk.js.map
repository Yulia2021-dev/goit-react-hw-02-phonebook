{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","App.js","helpers.js","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","handleNameInput","handleNumberInput","addContact","className","htmlFor","id","type","pattern","title","required","onChange","Component","ContactListItem","contact","removeContact","onClick","ContactList","contacts","map","ContactFilter","filter","handleFilterName","App","onChangeName","event","onFilterName","onChangeNumber","prevState","uuidv4","some","a","b","localeCompare","undefined","sensitivity","alert","filterContacts","normalizedFilter","toLowerCase","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7770bc44.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n \r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { handleNameInput, handleNumberInput, addContact } = this.props;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={addContact}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleNameInput}\r\n          \r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"number\" className=\"form-label\">Number</label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"number\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleNumberInput}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Add contact\" className=\"btn btn-primary\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction ContactListItem({ contact, removeContact }) {\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <p>{contact.name} : {contact.number}</p>\r\n      <button className=\"btn btn-danger btn-sm\" onClick={() => removeContact(contact.id)}>Delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\n\r\nconst ContactList = ({ contacts, removeContact }) => {\r\n  return (\r\n    <ul className=\"list-group list-group-flush\">\r\n      {contacts.map(contact => <ContactListItem key={contact.id } contact={contact} removeContact={ removeContact} />)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ContactList;","import React from 'react'\r\n\r\nconst ContactFilter = ({ filter, handleFilterName }) => {\r\n  return (\r\n    <div className=\"mb-3\">\r\n          <label htmlFor=\"filter\" className=\"form-label\">Find contacts by name</label>\r\n          <input\r\n            className=\"form-control\"\r\n          id=\"filter\"\r\n          type=\"text\"\r\n          name=\"filter-name\"\r\n          value={ filter }\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={ handleFilterName }\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactFilter;\r\n","import { React, Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"./index.scss\";\nimport \"./App.scss\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport ContactFilter from \"./components/ContactFilter/ContactFilter\";\nimport { ciEquals } from \"./helpers\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      name: \"\",\n      number: \"\",\n      filter: \"\",\n    };\n  }\n\n  onChangeName = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  onFilterName = (event) => {\n    this.setState({ filter: event.target.value });\n  };\n\n  onChangeNumber = (event) => {\n    this.setState({ number: event.target.value });\n  };\n\n  addContact = (event) => {\n    event.preventDefault();\n    this.setState((prevState) => {\n      const contact = {\n        id: uuidv4(),\n        name: prevState.name,\n        number: prevState.number,\n      };\n\n      if (prevState.contacts.some((e) => ciEquals(e.name, contact.name))) {\n        alert(`${contact.name} is already in contacts`);\n        return;\n      }\n\n      return {\n        contacts: [...prevState.contacts, contact],\n        name: \"\",\n        number: \"\",\n        filter: \"\",\n      };\n    });\n  };\n\n  removeContact = (id) => {\n    alert(\"Вы собираетесь удалить елемент с ID: \" + id);\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((e) => e.id !== id),\n        name: \"\",\n        number: \"\",\n        filter: \"\",\n      };\n    });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const filteredContacts = this.filterContacts();\n    const {\n      addContact,\n      onChangeName,\n      onChangeNumber,\n      onFilterName,\n      removeContact,\n    } = this.props;\n    return (\n      <div className=\"container\">\n        <div>\n          <h2 className=\"h2\">Phonebook</h2>\n          <ContactForm\n            addContact={addContact}\n            handleNameInput={onChangeName}\n            handleNumberInput={onChangeNumber}\n            name={this.state.name}\n            number={this.state.number}\n          />\n        </div>\n        <div>\n          <h2 className=\"h2\">Contacts</h2>\n          <ContactFilter\n            handleFilterName={onFilterName}\n            filter={this.state.filter}\n          />\n          <ContactList\n            contacts={filteredContacts}\n            removeContact={removeContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export function ciEquals(a, b) {\n  return typeof a === \"string\" && typeof b === \"string\"\n    ? a.localeCompare(b, undefined, { sensitivity: \"accent\" }) === 0\n    : a === b;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"bootstrap/scss/bootstrap.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}