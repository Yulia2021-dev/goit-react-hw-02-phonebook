{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","App.js","helpers.js","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","className","htmlFor","id","type","pattern","title","required","onChange","Component","ContactListItem","contact","removeContact","onClick","ContactList","contacts","map","ContactFilter","filter","handleFilterName","App","onFilterName","event","addContact","prevState","uuid","some","element","a","b","localeCompare","undefined","sensitivity","alert","filterContacts","normalizedFilter","toLowerCase","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba378866.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">\r\n            Name\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"number\" className=\"form-label\">\r\n            Number\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"number\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Add contact\" className=\"btn btn-primary\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nfunction ContactListItem({ contact, removeContact }) {\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <p>{contact.name} : {contact.number}</p>\r\n      <button className=\"btn btn-danger btn-sm\" onClick={() => removeContact(contact.id)}>Delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\n\r\nconst ContactList = ({ contacts, removeContact }) => {\r\n  return (\r\n    <ul className=\"list-group list-group-flush\">\r\n      {contacts.map(contact => <ContactListItem key={contact.id } contact={contact} removeContact={ removeContact} />)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ContactList;","import React from 'react'\r\n\r\nconst ContactFilter = ({ filter, handleFilterName }) => {\r\n  return (\r\n    <div className=\"mb-3\">\r\n          <label htmlFor=\"filter\" className=\"form-label\">Find contacts by name</label>\r\n          <input\r\n            className=\"form-control\"\r\n          id=\"filter\"\r\n          type=\"text\"\r\n          name=\"filter-name\"\r\n          value={ filter }\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={ handleFilterName }\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactFilter;\r\n","import { React, Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nimport \"./index.scss\";\nimport \"./App.scss\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport ContactFilter from \"./components/ContactFilter/ContactFilter\";\nimport { ciEquals } from \"./helpers\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      name: \"\",\n      number: \"\",\n      filter: \"\",\n    };\n  }\n\n  onFilterName = (event) => {\n    this.setState({ filter: event.target.value });\n  };\n\n  addContact = ({ name, number }) => {\n    this.setState((prevState) => {\n      const contact = {\n        id: uuid(),\n        name,\n        number,\n      };\n\n      if (\n        prevState.contacts.some((element) =>\n          ciEquals(element.name, contact.name)\n        )\n      ) {\n        alert(`${contact.name} is already in contacts`);\n        return;\n      }\n\n      return {\n        contacts: [...prevState.contacts, contact],\n        filter: \"\",\n      };\n    });\n  };\n\n  removeContact = (id) => {\n    alert(\"Вы собираетесь удалить елемент с ID: \" + id);\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((e) => e.id !== id),\n        name: \"\",\n        number: \"\",\n        filter: \"\",\n      };\n    });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const filteredContacts = this.filterContacts();\n    return (\n      <div className=\"container\">\n        <div>\n          <h2 className=\"h2\">Phonebook</h2>\n          <ContactForm onSubmit={this.addContact} />\n        </div>\n        <div>\n          <h2 className=\"h2\">Contacts</h2>\n          <ContactFilter\n            handleFilterName={this.onFilterName}\n            filter={this.state.filter}\n          />\n          <ContactList\n            contacts={filteredContacts}\n            removeContact={this.removeContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export function ciEquals(a, b) {\n  return typeof a === \"string\" && typeof b === \"string\"\n    ? a.localeCompare(b, undefined, { sensitivity: \"accent\" }) === 0\n    : a === b;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"bootstrap/scss/bootstrap.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}